--Criação do DAG

:SQL01

--Criação do AG01
USE [master]
GO
CREATE AVAILABILITY GROUP [AG01]
WITH (AUTOMATED_BACKUP_PREFERENCE = SECONDARY,
DB_FAILOVER = OFF,
DTC_SUPPORT = NONE,
REQUIRED_SYNCHRONIZED_SECONDARIES_TO_COMMIT = 0)
FOR 
REPLICA ON N'SQL01\SQL2019DEV01' WITH (ENDPOINT_URL = N'TCP://SQL01.:5022', FAILOVER_MODE = AUTOMATIC, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10, BACKUP_PRIORITY = 50, SEEDING_MODE = MANUAL, PRIMARY_ROLE(ALLOW_CONNECTIONS = ALL), SECONDARY_ROLE(ALLOW_CONNECTIONS = NO));
GO


--Criação do Listener
ALTER AVAILABILITY GROUP [AG01]
ADD LISTENER N'AG_01_Listener' (
WITH IP
((N'192.168.10.15', N'255.255.255.0')
)
, PORT=1433);



:SQL02

--Criação do AG02
USE [master]
GO
CREATE AVAILABILITY GROUP [AG02]
WITH (AUTOMATED_BACKUP_PREFERENCE = SECONDARY,
DB_FAILOVER = OFF,
DTC_SUPPORT = NONE,
REQUIRED_SYNCHRONIZED_SECONDARIES_TO_COMMIT = 0)
FOR 
REPLICA ON N'SQL02\SQL2019DEV02' WITH (ENDPOINT_URL = N'TCP://SQL02.:5022', FAILOVER_MODE = AUTOMATIC, AVAILABILITY_MODE = SYNCHRONOUS_COMMIT, SESSION_TIMEOUT = 10, BACKUP_PRIORITY = 50, SEEDING_MODE = MANUAL, PRIMARY_ROLE(ALLOW_CONNECTIONS = ALL), SECONDARY_ROLE(ALLOW_CONNECTIONS = NO));
GO


--Criação do Listener
ALTER AVAILABILITY GROUP [AG02]
ADD LISTENER N'AG_02_Listener' (
WITH IP
((N'192.168.10.17', N'255.255.255.0')
)
, PORT=1433);



:SQL01

--Criação do Distributed AG
CREATE AVAILABILITY GROUP DAG 
   WITH (DISTRIBUTED)   
   AVAILABILITY GROUP ON  
      'AG01' WITH    
      (   
         LISTENER_URL = 'TCP://AG_01_Listener:5022',    
         AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT,   
         FAILOVER_MODE = MANUAL,   
         SEEDING_MODE = MANUAL   
      ),   
      'AG02' WITH    
      (   
         LISTENER_URL = 'TCP://AG_02_Listener:5022',   
         AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT,   
         FAILOVER_MODE = MANUAL,   
         SEEDING_MODE = MANUAL   
      );    
GO   



:SQL02

--Ingressar no DAG
ALTER AVAILABILITY GROUP DAG   
   JOIN   
   AVAILABILITY GROUP ON  
      'AG01' WITH    
      (   
         LISTENER_URL = 'TCP://AG_01_Listener:5022',    
         AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT,   
         FAILOVER_MODE = MANUAL,   
         SEEDING_MODE = MANUAL   
      ),   
      'AG02' WITH    
      (   
         LISTENER_URL = 'TCP://AG_02_Listener:5022',   
         AVAILABILITY_MODE = ASYNCHRONOUS_COMMIT,   
         FAILOVER_MODE = MANUAL,   
         SEEDING_MODE = MANUAL  
      );    


:SQL01

--Criação da base teste e backup full / log
CREATE DATABASE [TESTE_DAG]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'TESTE_DAG', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQL2019DEV01\MSSQL\DATA\TESTE_DAG.mdf' , SIZE = 8192KB , FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'TESTE_DAG_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQL2019DEV01\MSSQL\DATA\TESTE_DAG_log.ldf' , SIZE = 8192KB , FILEGROWTH = 65536KB )

BACKUP DATABASE [TESTE_DAG] TO  DISK = N'C:\Temp\TESTE_DAG.bak' WITH NOFORMAT, NOINIT,  NAME = N'TESTE_DAG-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10
GO

BACKUP LOG [TESTE_DAG] TO  DISK = N'C:\Temp\TESTE_DAG.trn' WITH NOFORMAT, NOINIT,  NAME = N'TESTE_DAG-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10
GO


:SQL02
--Restore Backup Full / Log
USE [master]
RESTORE DATABASE [TESTE_DAG] FROM  DISK = N'C:\Temp\TESTE_DAG.bak' WITH  FILE = 1,  MOVE N'TESTE_DAG' TO N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQL2019DEV02\MSSQL\DATA\TESTE_DAG.mdf',  MOVE N'TESTE_DAG_log' TO N'C:\Program Files\Microsoft SQL Server\MSSQL15.SQL2019DEV02\MSSQL\DATA\TESTE_DAG_log.ldf',  NORECOVERY,  NOUNLOAD,  STATS = 5
GO

RESTORE LOG [TESTE_DAG] FROM  DISK = N'C:\Temp\TESTE_DAG.trn' WITH  FILE = 1,  NORECOVERY,  NOUNLOAD,  STATS = 10
GO


:SQL01

--Adicionar Base no AG01
USE [master]
GO

ALTER AVAILABILITY GROUP [AG01]
ADD DATABASE [TESTE_DAG];
GO


:SQL02

--Adicionar database ao DAG
ALTER DATABASE TESTE_DAG SET HADR AVAILABILITY GROUP = DAG
